
Example 1:

Input: S = "ababcababcd"
Output: ab*c*d
Explanation: We can encrypt the string 
in following way : "ababcababcd" -> 
"ababc*d" -> "ab*c*d"
Example 2:

Input: S = "zzzzzzz"
Output: z*z*z
Explanation: The string can be encrypted 
in 2 ways: "z*z*z" and "z**zzz". Out of 
the two "z*z*z" is smaller in length.





class Solution{
    public:
    const int mod = 1000000007,N = 100000,p=31;
    int p_pow[100000],h[100001];
    Solution(){
        p_pow[0] = 1;
        for(int i=1;i<N;i++)
            p_pow[i] = (1LL*p_pow[i-1]*p)%mod;
    }
    void compute_hash(string s){
        for(int i=0;i<s.size();i++)
            h[i+1] = (h[i]+1LL*(s[i]-'a'+1)*p_pow[i])%mod;
    }
    string solve(string s){
        int n = s.size()/2;
        for(int i=n;i>0;--i){
            int left_half_hash = h[i];
            int right_half_hash = (h[2*i]-h[i]+mod)%mod;
            if((1LL*left_half_hash*p_pow[i])%mod==right_half_hash){
                string ans = solve(s.substr(0,i));
                ans+='*'+s.substr(2*i,s.size());
                return ans;
            }
        }
        return s;
    }
    string compress(string s)
    {
        compute_hash(s);
        return solve(s);
    }
